definitions:
  artist.CreateArtistRequest:
    properties:
      biography:
        type: string
      country:
        type: string
      description:
        type: string
      genres:
        items:
          type: string
        type: array
      id_spotify:
        type: string
      image_url:
        type: string
      name:
        type: string
    type: object
  model.Artist:
    properties:
      biography:
        type: string
      country:
        type: string
      description:
        type: string
      genres:
        items:
          type: string
        type: array
      id:
        type: string
      idspotify:
        type: string
      imageURL:
        type: string
      name:
        type: string
    type: object
  model.Playlist:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      idspotify:
        type: string
      imageURL:
        type: string
      likes:
        items:
          type: string
        type: array
      name:
        type: string
      public:
        type: boolean
      songs:
        items:
          properties:
            order:
              type: integer
            songID:
              type: string
          type: object
        type: array
      title:
        type: string
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  model.Song:
    properties:
      album:
        type: string
      artistID:
        type: string
      duration:
        type: integer
      genre:
        type: string
      id:
        type: string
      idspotify:
        type: string
      reseaseYear:
        type: integer
      title:
        type: string
      urlspotify:
        type: string
    type: object
  model.User:
    properties:
      birth_date:
        type: string
      email:
        type: string
      fullname:
        type: string
      register_date:
        type: string
      telephone:
        type: string
      userId:
        type: integer
      username:
        type: string
    type: object
  music.CreateSongRequest:
    properties:
      album:
        type: string
      artist_id:
        type: string
      duration:
        type: integer
      genre:
        type: string
      id_spotify:
        type: string
      release_year:
        type: integer
      title:
        type: string
      url_spotify:
        type: string
    type: object
  playlist.CreatePlaylistRequest:
    properties:
      description:
        type: string
      id_spotify:
        type: string
      image_url:
        type: string
      name:
        type: string
      public:
        type: boolean
      songs:
        items:
          properties:
            order:
              type: integer
            song_id:
              type: string
          type: object
        type: array
      title:
        type: string
      user_id:
        type: string
    type: object
  request_model.AddUserToCommunityRequest:
    properties:
      community_name:
        type: string
      username:
        type: string
    required:
    - community_name
    - username
    type: object
  request_model.CommunityDataResponse:
    properties:
      community_name:
        type: string
      created_at:
        type: string
      description:
        type: string
    required:
    - community_name
    - created_at
    - description
    type: object
  request_model.CreateCommunityRequest:
    properties:
      community_name:
        type: string
      description:
        type: string
    required:
    - community_name
    - description
    type: object
  request_model.CreatePostRequest:
    properties:
      like_count:
        type: integer
      text:
        type: string
      url_foto:
        type: string
      user_id:
        type: integer
    required:
    - like_count
    - text
    - url_foto
    - user_id
    type: object
  request_model.CreatePostResponse:
    properties:
      like_count:
        type: integer
      text:
        type: string
      url_foto:
        type: string
    required:
    - like_count
    - text
    - url_foto
    type: object
  request_model.GetCommunityByNameRequest:
    properties:
      community_name:
        type: string
    required:
    - community_name
    type: object
  request_model.GetPostByIdResponse:
    properties:
      id:
        type: integer
      like_count:
        type: integer
      text:
        type: string
      url_foto:
        type: string
      user_id:
        type: integer
    required:
    - id
    - like_count
    - text
    - url_foto
    - user_id
    type: object
  request_model.GetPostsByUserIdResponse:
    properties:
      posts:
        items:
          $ref: '#/definitions/request_model.PostResponse'
        type: array
    required:
    - posts
    type: object
  request_model.GetUserByUsernameRequest:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  request_model.ListUserCommunitiesRequest:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  request_model.ListUserCommunitiesResponse:
    properties:
      communities:
        items:
          $ref: '#/definitions/request_model.CommunityDataResponse'
        type: array
    required:
    - communities
    type: object
  request_model.ListUsersOfCommunityResponse:
    properties:
      users:
        items:
          $ref: '#/definitions/request_model.UserResponse'
        type: array
    required:
    - users
    type: object
  request_model.PostResponse:
    properties:
      id:
        type: integer
      like_count:
        type: integer
      text:
        type: string
      url_foto:
        type: string
    required:
    - id
    - like_count
    - text
    - url_foto
    type: object
  request_model.SuccessCreationResponse:
    properties:
      message:
        type: string
    type: object
  request_model.UserResponse:
    properties:
      birth_date:
        type: string
      email:
        type: string
      fullname:
        type: string
      id:
        type: integer
      register_date:
        type: string
      telephone:
        type: string
      username:
        type: string
    required:
    - birth_date
    - email
    - fullname
    - telephone
    - username
    type: object
info:
  contact: {}
paths:
  /api/community/add_user:
    post:
      consumes:
      - application/json
      description: Adds a user to a community based on the username and community
        name
      parameters:
      - description: User and Community data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request_model.AddUserToCommunityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.SuccessCreationResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a user to a community
      tags:
      - community
  /api/community/create:
    post:
      consumes:
      - application/json
      description: Creates a new community in the system.
      parameters:
      - description: Community data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request_model.CreateCommunityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.SuccessCreationResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new community
      tags:
      - community
  /api/community/get_by_name:
    get:
      consumes:
      - application/json
      description: Returns the coomunity data based on the name.
      parameters:
      - description: Community data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request_model.GetCommunityByNameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.CommunityDataResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Returns community data
      tags:
      - community
  /api/community/list_users:
    get:
      consumes:
      - application/json
      description: List all user data of a community
      parameters:
      - description: Community Name
        in: query
        name: community_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.ListUsersOfCommunityResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List user of a community
      tags:
      - community
  /api/post/create-post:
    post:
      consumes:
      - application/json
      description: Creates a new post in the system.
      parameters:
      - description: Post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request_model.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.CreatePostResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new post
      tags:
      - Post
  /api/post/get-post-by-id:
    get:
      consumes:
      - application/json
      description: Retrieves a post using its unique identifier.
      parameters:
      - description: Post ID
        in: query
        name: post_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.GetPostByIdResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Post Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get post by ID
      tags:
      - Post
  /api/post/get-posts-by-user-id:
    get:
      consumes:
      - application/json
      description: Retrieves all posts created by a specific user.
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.GetPostsByUserIdResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get posts by user ID
      tags:
      - Post
  /api/user/create-user:
    post:
      consumes:
      - application/json
      description: Creates a new user in the system.
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - User
  /api/user/get_by_username:
    get:
      consumes:
      - application/json
      description: Return user data based on their username
      parameters:
      - description: User data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request_model.GetUserByUsernameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.UserResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a user by its name
      tags:
      - User
  /api/user/list_communities:
    get:
      consumes:
      - application/json
      description: Return all communities a user is part of
      parameters:
      - description: User data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request_model.ListUserCommunitiesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.ListUserCommunitiesResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all communities of a user
      tags:
      - User
  /artists:
    post:
      consumes:
      - application/json
      description: Create a new artist in the database
      parameters:
      - description: Artist object
        in: body
        name: artist
        required: true
        schema:
          $ref: '#/definitions/artist.CreateArtistRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Artist'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new artist
      tags:
      - artists
  /artists/{id}:
    get:
      consumes:
      - application/json
      description: Get artist data by MongoDB ObjectID
      parameters:
      - description: Artist ObjectID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Artist'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get artist by ID
      tags:
      - artists
  /artists/spotify/{spotify_id}:
    get:
      consumes:
      - application/json
      description: Get artist data by Spotify ID
      parameters:
      - description: Spotify Artist ID
        in: path
        name: spotify_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Artist'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get artist by Spotify ID
      tags:
      - artists
  /playlists:
    post:
      consumes:
      - application/json
      description: Create a new playlist in the database
      parameters:
      - description: Playlist object
        in: body
        name: playlist
        required: true
        schema:
          $ref: '#/definitions/playlist.CreatePlaylistRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Playlist'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new playlist
      tags:
      - playlists
  /playlists/{id}:
    get:
      consumes:
      - application/json
      description: Get a playlist by its MongoDB ObjectID
      parameters:
      - description: Playlist ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Playlist'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get playlist by ID
      tags:
      - playlists
  /playlists/user/{username}:
    get:
      consumes:
      - application/json
      description: Get all playlists created by a specific user
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Playlist'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user's playlists
      tags:
      - playlists
  /songs:
    get:
      consumes:
      - application/json
      description: Get a list of all songs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Song'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all songs
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Create a new song in the database
      parameters:
      - description: Song object
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/music.CreateSongRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Song'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new song
      tags:
      - songs
  /songs/{id}:
    get:
      consumes:
      - application/json
      description: Get a song by its MongoDB ObjectID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Song'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a song by ID
      tags:
      - songs
swagger: "2.0"
