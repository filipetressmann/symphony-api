definitions:
  model.User:
    properties:
      birth_date:
        type: string
      email:
        type: string
      fullname:
        type: string
      register_date:
        type: string
      telephone:
        type: string
      userId:
        type: integer
      username:
        type: string
    type: object
  request_model.AddUserToCommunityRequest:
    properties:
      community_name:
        type: string
      username:
        type: string
    required:
    - community_name
    - username
    type: object
  request_model.BaseChatData:
    properties:
      chat_id:
        type: integer
      created_at:
        type: string
    required:
    - chat_id
    - created_at
    type: object
  request_model.CommunityDataResponse:
    properties:
      community_name:
        type: string
      created_at:
        type: string
      description:
        type: string
    required:
    - community_name
    - created_at
    - description
    type: object
  request_model.CreateChatRequest:
    properties:
      username1:
        type: string
      username2:
        type: string
    required:
    - username1
    - username2
    type: object
  request_model.CreateCommunityRequest:
    properties:
      community_name:
        type: string
      description:
        type: string
    required:
    - community_name
    - description
    type: object
  request_model.CreatePostRequest:
    properties:
      like_count:
        type: integer
      text:
        type: string
      url_foto:
        type: string
      user_id:
        type: integer
    required:
    - like_count
    - text
    - url_foto
    - user_id
    type: object
  request_model.CreatePostResponse:
    properties:
      like_count:
        type: integer
      text:
        type: string
      url_foto:
        type: string
    required:
    - like_count
    - text
    - url_foto
    type: object
  request_model.GetChatByIdRequest:
    properties:
      chat_id:
        type: integer
    required:
    - chat_id
    type: object
  request_model.GetCommunityByNameRequest:
    properties:
      community_name:
        type: string
    required:
    - community_name
    type: object
  request_model.GetPostByIdResponse:
    properties:
      id:
        type: integer
      like_count:
        type: integer
      text:
        type: string
      url_foto:
        type: string
      user_id:
        type: integer
    required:
    - id
    - like_count
    - text
    - url_foto
    - user_id
    type: object
  request_model.GetPostsByUserIdResponse:
    properties:
      posts:
        items:
          $ref: '#/definitions/request_model.PostResponse'
        type: array
    required:
    - posts
    type: object
  request_model.GetUserByUsernameRequest:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  request_model.ListChatsFromUserRequest:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  request_model.ListChatsFromUserResponse:
    properties:
      chat_ids:
        items:
          type: integer
        type: array
    required:
    - chat_ids
    type: object
  request_model.ListUserCommunitiesRequest:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  request_model.ListUserCommunitiesResponse:
    properties:
      communities:
        items:
          $ref: '#/definitions/request_model.CommunityDataResponse'
        type: array
    required:
    - communities
    type: object
  request_model.ListUsersFromChatRequest:
    properties:
      chat_id:
        type: integer
    required:
    - chat_id
    type: object
  request_model.ListUsersFromChatResponse:
    properties:
      username1:
        type: string
      username2:
        type: string
    required:
    - username1
    - username2
    type: object
  request_model.ListUsersOfCommunityResponse:
    properties:
      users:
        items:
          $ref: '#/definitions/request_model.UserResponse'
        type: array
    required:
    - users
    type: object
  request_model.PostResponse:
    properties:
      id:
        type: integer
      like_count:
        type: integer
      text:
        type: string
      url_foto:
        type: string
    required:
    - id
    - like_count
    - text
    - url_foto
    type: object
  request_model.SuccessCreationResponse:
    properties:
      message:
        type: string
    type: object
  request_model.UserResponse:
    properties:
      birth_date:
        type: string
      email:
        type: string
      fullname:
        type: string
      id:
        type: integer
      register_date:
        type: string
      telephone:
        type: string
      username:
        type: string
    required:
    - birth_date
    - email
    - fullname
    - telephone
    - username
    type: object
info:
  contact: {}
  description: API for Symphony application, which is an social media created for
    educational purposes, focusing on music.
  title: Symphony API
  version: "1.0"
paths:
  /api/chat/create:
    post:
      consumes:
      - application/json
      description: Creates a new chat between two users in the system.
      parameters:
      - description: Usernames of the users to create a chat between
        in: body
        name: usernames
        required: true
        schema:
          $ref: '#/definitions/request_model.CreateChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.SuccessCreationResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new chat
      tags:
      - chat
  /api/chat/get_by_id:
    get:
      consumes:
      - application/json
      description: Returns chat data by its ID.
      parameters:
      - description: Chat ID
        in: body
        name: chat_id
        required: true
        schema:
          $ref: '#/definitions/request_model.GetChatByIdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.BaseChatData'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Returns chat data
      tags:
      - chat
  /api/chat/list_chats:
    get:
      consumes:
      - application/json
      description: Returns the chat IDs for a user.
      parameters:
      - description: User data
        in: body
        name: user_id
        required: true
        schema:
          $ref: '#/definitions/request_model.ListChatsFromUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.ListChatsFromUserResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List chats from a user
      tags:
      - chat
  /api/chat/list_users:
    get:
      consumes:
      - application/json
      description: Returns the users in a chat by its ID.
      parameters:
      - description: Chat ID
        in: body
        name: chat_id
        required: true
        schema:
          $ref: '#/definitions/request_model.ListUsersFromChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.ListUsersFromChatResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List users from a chat
      tags:
      - chat
  /api/community/add_user:
    post:
      consumes:
      - application/json
      description: Adds a user to a community based on the username and community
        name
      parameters:
      - description: User and Community data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request_model.AddUserToCommunityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.SuccessCreationResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a user to a community
      tags:
      - community
  /api/community/create:
    post:
      consumes:
      - application/json
      description: Creates a new community in the system.
      parameters:
      - description: Community data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request_model.CreateCommunityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.SuccessCreationResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new community
      tags:
      - community
  /api/community/get_by_name:
    get:
      consumes:
      - application/json
      description: Returns the coomunity data based on the name.
      parameters:
      - description: Community data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request_model.GetCommunityByNameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.CommunityDataResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Returns community data
      tags:
      - community
  /api/community/list_users:
    get:
      consumes:
      - application/json
      description: List all user data of a community
      parameters:
      - description: Community Name
        in: query
        name: community_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.ListUsersOfCommunityResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List user of a community
      tags:
      - community
  /api/post/create:
    post:
      consumes:
      - application/json
      description: Creates a new post in the system.
      parameters:
      - description: Post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request_model.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.CreatePostResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new post
      tags:
      - Post
  /api/post/get-post-by-id:
    get:
      consumes:
      - application/json
      description: Retrieves a post using its unique identifier.
      parameters:
      - description: Post ID
        in: query
        name: post_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.GetPostByIdResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Post Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get post by ID
      tags:
      - Post
  /api/post/get-posts-by-user-id:
    get:
      consumes:
      - application/json
      description: Retrieves all posts created by a specific user.
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.GetPostsByUserIdResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get posts by user ID
      tags:
      - Post
  /api/user/create-user:
    post:
      consumes:
      - application/json
      description: Creates a new user in the system.
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - User
  /api/user/get_by_username:
    get:
      consumes:
      - application/json
      description: Return user data based on their username
      parameters:
      - description: User data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request_model.GetUserByUsernameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.UserResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a user by its name
      tags:
      - User
  /api/user/list_communities:
    get:
      consumes:
      - application/json
      description: Return all communities a user is part of
      parameters:
      - description: User data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/request_model.ListUserCommunitiesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request_model.ListUserCommunitiesResponse'
        "400":
          description: Invalid Input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all communities of a user
      tags:
      - User
swagger: "2.0"
